========================================================================
========================================================================

The \tables\ folder contains all of the application's tables!

The \names\ folder contains all of the information required to generate custom names.

The \shop\ folder contains all of the information required to populate the shop.

The \npc\ folder contains all of the information required to build custom NPCs.

========================================================================
========================================================================

library.data is a library of look-up tables. Do not edit this file. It may
be updated by future application updates. Instead, create a file (with any
name you like) with the extension .data.

There are several ways to create your own content:

1) Use the ToT_tool at https://sourceforge.net/p/table-of-tables/
   to convert Reddit BehindTheTables content in to the correct format.
   It's beta, the tables may need some tweaking, but it will save you
   a lot of work.
   
2) Use the python ToTParse by mowngle at https://github.com/mowngle/ToTParser

3) Create the text files manually using any text editor, or edit
   existing files to create new content.
   
If you have issues while creating new content, or would like some
new functionality for a table, then don't hesitate to get in touch.


========================================================================
========================================================================
== Tables ==============================================================
========================================================================
========================================================================


Folder format

\tables\top level category name\sub-category name\table_name.txt

The contents of the "top level category name" and "sub-category name" folders will appear within the application's category and sub-category sections respectively.

File names cannot contain the / symbol, however, if you need this symbol (as in "Dungeons / Locations"), then use a double underscore __. The application will replace them automatically!


========================================================================
== Structures ==========================================================
========================================================================

Comments start with either / or ;

tablename is optional.


To display a title above a table:

    [
    d:Title or header description
    ]

A rollable table:

    {
    n:tablename (must be one word without spaces/puncution, only alphanumeric chars allowed)
    d:dx description
    i:rollable item
    }

or

A rollable table:

    {
    n:tablename (must be one word without spaces/puncution, only alphanumeric chars allowed)
    d:dx description
    i:rollable item
    i:rollable item (dx): 1. an option 2. another option.
    }

or

    {
    n:tablename (must be one word without spaces/puncution, only alphanumeric chars allowed)
    d:df description
    i:a-b rollable item
    i:c-d rollable item
    i:e-f rollable item
    }

or

    {
    n:tablename (must be one word without spaces/puncution, only alphanumeric chars allowed)
    d:df description
    i:a-b rollable item
    i:c-d rollable item
    i:e-f rollable item (dx): 1. an option 2. another option.
    }


========================================================================
== Valid Table structures ==============================================
========================================================================

There is no need to stick to established gaming dice (d4, d8, etc.) any
integer from 0* upwards is allowed.


1: the one-to-one structure

Where each rollable option is represented by only a single dice roll value.
A dx is rolled, and there are x options.

    {
    d:d10 This place is (or was) a...
    i:A stronghold.
    i:A temple.
    i:A tomb.
    i:A prison.
    i:A mine.
    i:A lair.
    i:A palace.
    i:A storage vault.
    i:A sewer.
    i:A maze.
    }


2: the range structure

Where each rollable option is covered by either a single dice roll value, or,
a range of values.

A dx is rolled, but there are y options.

    {
    d:d100 Air
    i:01-70. clear.
    i:71-80. foggy (or steamy).
    i:81-88. foggy near floor (or steamy).
    i:89-90. hazy (dust).
    i:91-99. misted.
    i:100. heavy fog
    }


3: tables within tables:

Where a rollable option has sub options:

    {
    d:d12 The prison is located...
    i:On a small island on a remote coast.
    i:On a small island near a city.
    i:In a tower of a castle.
    i:Beneath a temple complex.
    i:In an annex on a temple complex.
    i:Beneath a town hall.
    i:In an annex on a town hall.
    i:Underneath a city, deep below ground.
    i:Behind walls in a fortified rural location (d4): 1. coastland; 2. farmland; 3. mining country; 4. ranchland.
    i:Below ground, in a hidden rural location (d4): 1. coastland; 2. farmland; 3. mining country; 4. ranchland.
    i:Behind walls in a fortified wilerness location (d6): 1. desert, 2. forest, 3. hills; 4. mountains, 5. swamp; 6. tundra.
    i:Below ground, in a hidden wilderness location (d6): 1. desert, 2. forest, 3. hills; 4. mountains, 5. swamp; 6. tundra.
    }


*4: show everything in the list

    {
    d:d0 This is a special table
    i:Show me
    i:and show me
    i:and even me!!
    }

This is only really useful when the contents of the table contain 
random content from either other tables or names.

See NPCs->Knights.txt for an example of this being used.


========================================================================
========================================================================
== Cool Stuff ==========================================================
========================================================================
========================================================================


It's possible to add random content from one table in to the output
of a different table:

Reference a table, by its name with @tablename.

Limit the roll on the referenced table with @tablename!value

    {
    n:cats
    d:d4 cats
    i:siamese cats
    i:fluffy cats
    i:moggy cats
    i:burmese cats
    }

    {
    d:d2 stuff i like
    i:i like fish
    i:i like @cats
    }

If you need to roll upto a specific value then use the format:

    {
    n:colours
    d:d4 list of colours
    i:red
    i:green
    i:yellow
    i:i don't like colours
    }

    {
    d:d2 stuff i like
    i:i like all colours
    i:i like @colours!3
    }

Will limit the roll on the look-up table to 3 (ignoring the "i don't
like colours" option).

Generating a random dice roll within a table entry:

    {
    d:d2 The player gets...
    i:=1d6 gp
    i:=2d6 sp
    }

Produces something like:

    The player gets 5 gp
    The player gets 11 sp

The expression to be evaluated can contain:

    dy where y > 0
    xdy (where x > 0, y > 0)
    + - *

Cannot contain any other characters!
    
Examples: 2d6
          1d6+1d4
          1d10+6
          d10-2


========================================================================
========================================================================
== Cool Stuff II =======================================================
========================================================================
========================================================================


It's now possible to embed useful table references within rollable items.
This makes it easier to continue building your story without having to
search around the application for relevant tables.

Take this example:

{
d:d3 The character finds an item:
i:A cursed{cursessimple} sword
i:10 gold pieces
i:A hat
}

The character rolls the cursed sword, instead of the (already busy) DM
needing to work out the curse, just right mouse button on the text in the
display window; a Table References menu is located at the bottom with
the following options:

cursessimple

click on that, and it will roll a curse for you (from the table named
"cursessimple"). This is a table supplied in the library.data file.

To add this to your custom content, use the following syntax:

i:some rollable option{tablename}

i:some rollable option{tablename,anothertablename}

Separate each entry with a comma, it must refer to a valid table by name.

Want to give an entire subcategory of tables as an option? That's possible
too.

i:some rollable option{.subcategoryname}

For instance:

i:The cellar of a popular tavern{.tavern goings-on}.

Where "tavern goings-on" is the name of a file in the "factions_groups"
category.

Similar to table name, but include a . before a reference to any file
in the \data\tables folder.


========================================================================
==                                                                    ==
========================================================================

- Paul A Freshney, August 17th 2017
  paul@freshney.org

========================================================================
==                                                                    ==
========================================================================

